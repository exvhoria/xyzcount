local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "ð“†© AstralHub ð“†ª || V1.3",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "V1.3 â€” Private Version",
   LoadingSubtitle = "by GhosttedXV",
   Theme = "Bloom", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = false,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = true, -- Set this to true to use our key system
   KeySettings = {
      Title = "AstralHub - KEY SYSTEM",
      Subtitle = "AstralHub by GhosttedXV",
      Note = "KEY: AstronomyBackwards", -- Use this to tell the user how to get a key
      FileName = "AstraHubKEY-ZXAQ", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"AstronomyBackwards"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

-- TAB & SECTION
local HomeTab = Window:CreateTab("Home", "rewind")
local AutoFarmTab = Window:CreateTab("Auto Farm", "rewind")
local PlayerTab = Window:CreateTab("Player", "rewind")
local VisualTab = Window:CreateTab("Visual", "rewind")
local UtilityTab = Window:CreateTab("Utility", "rewind")

-- LOCAL INFORMATION
local alreadyBypassed = false

-- NOTIFICATION

Rayfield:Notify({
   Title = "Unsupported Executor!",
   Content = "Your executor not support 100% UNC. Some of the feature need UNC and may break if not supported!",
   Duration = 6.5,
   Image = "triangle-alert",
})

-- Home TAB
local HomeSection = HomeTab:CreateSection("Main Feature")

-- FPS Drop Simulator Function
local function simulateFPSDrop(duration)
    local startTime = tick()
    while tick() - startTime < duration do
        -- Busy wait to simulate lag
    end
end

local Button = HomeTab:CreateButton({
   Name = "Bypass Anti Cheat",
   Callback = function()
       if alreadyBypassed then
           game.StarterGui:SetCore("SendNotification", {
               Title = "Bypass Blocked",
               Text = "Already bypassed!",
               Duration = 3
           })
           return
       end

       alreadyBypassed = true

       game.StarterGui:SetCore("SendNotification", {
           Title = "Made by s1lvyIsMe!!",
           Text = "s1lvyIsMe made this anti cheat bypass!! :3",
           Duration = 3
       })

       -- Simulate FPS drop / lag for 3 seconds
       simulateFPSDrop(3)

       local randomRate = math.random(1, 100)

       game.StarterGui:SetCore("SendNotification", {
           Title = "Bypass Success",
           Text = "Successful Bypass! Rate chance is " .. tostring(randomRate) .. ", enjoy! :3",
           Duration = 5
       })
   end,
})
