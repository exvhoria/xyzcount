repeat task.wait() until game:IsLoaded()
repeat task.wait() until game.Players.LocalPlayer:FindFirstChild("PlayerGui")

-- Load Rayfield
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

-- Create Window
local Window = Rayfield:CreateWindow({
    Name = "Dead Rails",
    LoadingTitle = "Dead Rails Script",
    LoadingSubtitle = "Made by Lucas",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = "DeadRailsConfig",
        FileName = "Config"
    },
    Discord = {
        Enabled = false,
        Invite = "noinvitelink",
        RememberJoins = true
    },
    KeySystem = false,
})

if getgenv().teste then
    local Tab = Window:CreateTab("Tests", "flask-conical") -- Using test tube icon

    local defaultTpPos = Vector3.new(100, 10, 200)
    local currentTpPos = defaultTpPos

    Tab:CreateButton({
        Name = "Teleport",
        Callback = function()
            local char = game.Players.LocalPlayer.Character
            if char and char:FindFirstChild("HumanoidRootPart") then
                char:MoveTo(currentTpPos)
            end
        end,
    })

    Tab:CreateButton({
        Name = "Set TP to Current Position",
        Callback = function()
            local char = game.Players.LocalPlayer.Character
            if char and char:FindFirstChild("HumanoidRootPart") then
                currentTpPos = char.HumanoidRootPart.Position
            end
        end,
    })

    Tab:CreateButton({
        Name = "Reset TP Position",
        Callback = function()
            currentTpPos = defaultTpPos
        end,
    })

    Tab:CreateSlider({
        Name = "Walk Speed",
        Range = {10, 150},
        Increment = 1,
        Suffix = "speed",
        CurrentValue = 16,
        Flag = "WalkSpeed",
        Callback = function(Value)
            local char = game.Players.LocalPlayer.Character
            if char and char:FindFirstChildOfClass("Humanoid") then
                char:FindFirstChildOfClass("Humanoid").WalkSpeed = Value
            end
        end,
    })

    local flying = false
    local RS = game:GetService("RunService")
    local speed = 3
    local bv, bg, char, hrp, humanoid

    Tab:CreateToggle({
        Name = "Fly (Mobile Analog)",
        CurrentValue = false,
        Flag = "FlyToggle",
        Callback = function(state)
            flying = state
            char = game.Players.LocalPlayer.Character
            if not char or not char:FindFirstChild("HumanoidRootPart") then return end
            hrp = char:FindFirstChild("HumanoidRootPart")
            humanoid = char:FindFirstChildWhichIsA("Humanoid")
            
            if flying then  
                bv = Instance.new("BodyVelocity")  
                bv.Velocity = Vector3.zero  
                bv.MaxForce = Vector3.new(1e9, 1e9, 1e9)  
                bv.Parent = hrp  
                bg = Instance.new("BodyGyro")  
                bg.MaxTorque = Vector3.new(1e9, 1e9, 1e9)  
                bg.CFrame = hrp.CFrame  
                bg.Parent = hrp  

                humanoid.PlatformStand = true  

                RS:BindToRenderStep("Fly", Enum.RenderPriority.Input.Value, function()  
                    local cam = workspace.CurrentCamera  
                    local moveDir = humanoid.MoveDirection  

                    if moveDir.Magnitude > 0 then  
                        bv.Velocity = cam.CFrame:VectorToWorldSpace(moveDir.Unit * speed)  
                    else  
                        bv.Velocity = Vector3.zero  
                    end  

                    bg.CFrame = cam.CFrame  
                end)  
            else  
                RS:UnbindFromRenderStep("Fly")  
                if bv then bv:Destroy() end  
                if bg then bg:Destroy() end  
                if humanoid then humanoid.PlatformStand = false end  
            end  
        end,
    })

    local bondLabel
    pcall(function()
        bondLabel = game.Players.LocalPlayer:WaitForChild("PlayerGui"):WaitForChild("BondGui"):WaitForChild("BondInfo"):WaitForChild("BondCount")
    end)

    Tab:CreateParagraph({
        Title = "Your Bond:",
        Content = bondLabel and bondLabel.Text or "N/A"
    })
end
            
local main = Window:CreateTab("Main", "home")

local Section = main:CreateSection("Auto Collect/Use")

main:CreateToggle({
    Name = "Auto Collect",
    CurrentValue = false,
    Flag = "AutoCollectToggle",
    Callback = function(state)
        autoCollectRunning = state

        if state then
            local function collectItems()
                if not workspace:FindFirstChild("RuntimeItems") then return end

                local items = {
                    workspace.RuntimeItems:FindFirstChild("Rifle"),
                    workspace.RuntimeItems:FindFirstChild("RifleAmmo"),
                    workspace.RuntimeItems:FindFirstChild("Bandage"),
                    workspace.RuntimeItems:FindFirstChild("Shotgun"),
                    workspace.RuntimeItems:FindFirstChild("Revolver"),
                    workspace.RuntimeItems:FindFirstChild("ShotgunShells"),
                    workspace.RuntimeItems:FindFirstChild("Molotov"),
                    workspace.RuntimeItems:FindFirstChild("RevolverAmmo"),
                    workspace.RuntimeItems:FindFirstChild("Mauser"),
                    workspace.RuntimeItems:FindFirstChild("Snake Oil"),
                    workspace.RuntimeItems:FindFirstChild("Shovel"),
                    workspace.RuntimeItems:FindFirstChild("OpenableCrate"),
                    workspace.RuntimeItems:FindFirstChild("Navy Revolver"),
                    workspace.RuntimeItems:FindFirstChild("Bolt Action Rifle"),
                    workspace.RuntimeItems:FindFirstChild("Holy Water"),
                    workspace.RuntimeItems:FindFirstChild("Electrocutioner"),
                    workspace.RuntimeItems:FindFirstChild("Vampire Knife")
                }

                local rs = game:GetService("ReplicatedStorage")
                local pickUpRemote = rs:FindFirstChild("Remotes") and rs.Remotes:FindFirstChild("Tool") and rs.Remotes.Tool:FindFirstChild("PickUpTool")
                local activateRemote = rs:FindFirstChild("Packages") and rs.Packages:FindFirstChild("RemotePromise") and rs.Packages.RemotePromise.Remotes:FindFirstChild("C_ActivateObject")

                if not pickUpRemote or not activateRemote then return end

                for _, item in pairs(items) do
                    if item then
                        local args = { item }
                        pickUpRemote:FireServer(unpack(args))
                        activateRemote:FireServer(unpack(args))
                    end
                end
            end

            task.spawn(function()
                while autoCollectRunning do
                    task.wait(0.4)
                    pcall(collectItems)
                end
            end)
        end
    end,
})

local bondRunning = false

main:CreateToggle({
    Name = "Collect Bonds (Near You)",
    CurrentValue = false,
    Flag = "ActivateBondToggle",
    Callback = function(state)
        bondRunning = state

        if state then
            task.spawn(function()
                while bondRunning do
                    local bond = workspace:FindFirstChild("RuntimeItems") and workspace.RuntimeItems:FindFirstChild("Bond")
                    if bond then
                        local args = { bond }
                        game:GetService("ReplicatedStorage").Packages.RemotePromise.Remotes.C_ActivateObject:FireServer(unpack(args))
                    end
                    task.wait(0.5)
                end
            end)
        end
    end,
})

local Section = main:CreateSection("Other")

main:CreateButton({
    Name = "Fly (Functional)",
    Callback = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/GhostPlayer352/Test4/main/Vehicle%20Fly%20Gui'))()
    end,
})

local BondsTab = Window:CreateTab("Aimbot", "crosshair")

BondsTab:CreateToggle({
    Name = "AimLock NPC",
    CurrentValue = false,
    Flag = "AimLockToggle",
    Callback = function(state)
        local Players = game:GetService("Players")
        local player = Players.LocalPlayer
        local runService = game:GetService("RunService")
        local camera = workspace.CurrentCamera

        if not _G.AimLockData then
            _G.AimLockData = { Loop = nil }
        end

        local function stopAimLock()
            if _G.AimLockData.Loop then
                _G.AimLockData.Loop:Disconnect()
                _G.AimLockData.Loop = nil
            end
            if player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
                camera.CameraSubject = player.Character:FindFirstChildOfClass("Humanoid")
            end
        end

        local function startAimLock()
            stopAimLock()
            
            _G.AimLockData.Loop = runService.RenderStepped:Connect(function()
                if not state then return stopAimLock() end
                if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then return end
                
                local closestNPC = nil
                local closestDistance = math.huge
                
                for _, npc in ipairs(workspace:GetDescendants()) do
                    if npc:IsA("Model") and npc ~= player.Character then
                        local humanoid = npc:FindFirstChildOfClass("Humanoid")
                        local hrp = npc:FindFirstChild("HumanoidRootPart")
                        
                        if humanoid and hrp and humanoid.Health > 0 then
                            local distance = (hrp.Position - player.Character.HumanoidRootPart.Position).Magnitude
                            if distance < closestDistance then
                                closestDistance = distance
                                closestNPC = npc
                            end
                        end
                    end
                end
                
                if closestNPC then
                    camera.CameraSubject = closestNPC:FindFirstChildOfClass("Humanoid")
                else
                    camera.CameraSubject = player.Character:FindFirstChildOfClass("Humanoid")
                end
            end)
        end

        if state then
            player.CameraMode = Enum.CameraMode.Classic
            startAimLock()
        else
            stopAimLock()
        end
    end,
})

local tabpt = Window:CreateTab("Teleports", "map-pin")

local Section = tabpt:CreateSection("Teleports by Lucas:")

tabpt:CreateButton({
    Name = "TP to Tesla",
    Callback = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/ringtaa/tptotesla.github.io/refs/heads/main/Tptotesla.lua'))()
    end,
})

tabpt:CreateButton({
    Name = "TP to Castle",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/ringtaa/castletpfast.github.io/refs/heads/main/FASTCASTLE.lua"))()
    end,
})

tabpt:CreateButton({
    Name = "TP to Fort",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/ringtaa/Tpfort.github.io/refs/heads/main/Tpfort.lua"))()
    end,
})

local section = tabpt:CreateSection("Teleports by ringtaa:")

tabpt:CreateParagraph({
    Title = "How to use:",
    Content = "May not work as I didn't make these. For 100% success rate use my TP to end and others!"
})

tabpt:CreateButton({
    Name = "TP to End (Pacifist)",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/ringtaa/newpacifisct/refs/heads/main/newpacifisct.lua"))()
    end,
})

tabpt:CreateButton({
    Name = "TP to Starling",
    Callback = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/ringtaa/sterlingnotifcation.github.io/refs/heads/main/Sterling.lua'))()
    end,
})

tabpt:CreateButton({
    Name = "TP to Bank",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/ringtaa/Tptobank.github.io/refs/heads/main/Banktp.lua"))()
    end,
})

local section = tabpt:CreateSection("Easter Section by ringtaa")

tabpt:CreateButton({
    Name = "TP to 6 Golden Eggs",
    Callback = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/r4mpage4/LuaCom/refs/heads/main/collect6eggs.fr'))()
    end,
})

tabpt:CreateButton({
    Name = "UFO Teleports",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/gumanba/Scripts/main/DeadRails"))()
    end,
})

local visual = Window:CreateTab("Visual", "eye")

visual:CreateToggle({
    Name = "Unicorn ESP",
    CurrentValue = false,
    Flag = "unicornesp",
    Callback = function(state)
        if state then
            local ESP = loadstring(game:HttpGet("https://kiriot22.com/releases/ESP.lua"))()
            ESP:Toggle(true)
            ESP.Players = false
            ESP.Boxes = true
            ESP.Names = true
            ESP.TeamColor = false
            ESP.FaceCamera = true
            ESP.Distance = 10000

            function AddIfAliveUnicorn(model)
                if model:IsA("Model") and string.lower(model.Name):find("unicorn") then
                    local humanoid = model:FindFirstChildWhichIsA("Humanoid")
                    if humanoid and humanoid.Health > 0 then
                        local part = model:FindFirstChild("HumanoidRootPart") or model:FindFirstChildWhichIsA("BasePart")
                        if part then
                            ESP:Add(model, {
                                Name = "Unicorn",
                                PrimaryPart = part,
                                Color = Color3.fromRGB(255, 182, 193),
                                IsEnabled = true
                            })
                        end
                    end
                end
            end

            for _, obj in pairs(workspace:GetDescendants()) do
                AddIfAliveUnicorn(obj)
            end

            workspace.DescendantAdded:Connect(function(obj)
                task.wait(0.1)
                AddIfAliveUnicorn(obj)
            end)
        end
    end,
})

local trainTab = Window:CreateTab("Train", "train")

trainTab:CreateButton({
    Name = "TP to Train",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/ringtaa/NEWTPTRAIN.github.io/refs/heads/main/TRAIN.LUA"))()     
    end,
})

trainTab:CreateParagraph({
    Title = "Coming Soon",
    Content = "More features coming soon!"
})

local andtab = Window:CreateTab("End Game", "flag")

andtab:CreateButton({
    Name = "My TP to End (Non-Pacifist)",
    Callback = function()
        local Players = game:GetService("Players")
        local player = Players.LocalPlayer
        local runService = game:GetService("RunService")
        local camera = workspace.CurrentCamera

        local character = player.Character or player.CharacterAdded:Wait()
        local hrp = character:WaitForChild("HumanoidRootPart")
        local targetPos = Vector3.new(-424.4, 28.1, -49040.7)

        task.spawn(function()
            for i = 1, 450 do
                hrp.CFrame = CFrame.new(targetPos)
                task.wait(0.02)
            end
        end)

        local aimLockLoop

        local function stopAimLock()
            if aimLockLoop then
                aimLockLoop:Disconnect()
                aimLockLoop = nil
            end
            if player.Character and player.Character:FindFirstChildOfClass("Humanoid") then
                camera.CameraSubject = player.Character:FindFirstChildOfClass("Humanoid")
            end
        end

        local function startAimLock()
            stopAimLock()

            aimLockLoop = runService.RenderStepped:Connect(function()
                if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then return end

                local closestNPC = nil
                local closestDistance = math.huge

                for _, npc in ipairs(workspace:GetDescendants()) do
                    if npc:IsA("Model") and npc ~= player.Character and not Players:GetPlayerFromCharacter(npc) then
                        local humanoid = npc:FindFirstChildOfClass("Humanoid")
                        local hrp = npc:FindFirstChild("HumanoidRootPart")

                        if humanoid and hrp and humanoid.Health > 0 then
                            local distance = (hrp.Position - player.Character.HumanoidRootPart.Position).Magnitude
                            if distance < closestDistance then
                                closestDistance = distance
                                closestNPC = npc
                            end
                        end
                    end
                end

                if closestNPC then
                    camera.CameraSubject = closestNPC:FindFirstChildOfClass("Humanoid")
                else
                    camera.CameraSubject = player.Character:FindFirstChildOfClass("Humanoid")
                end
            end)
        end

        player.CameraMode = Enum.CameraMode.Classic
        startAimLock()

        local noclip = true
        runService.Stepped:Connect(function()
            if noclip and character then
                for _, part in pairs(character:GetDescendants()) do
                    if part:IsA("BasePart") and part.CanCollide == true then
                        part.CanCollide = false
                    end
                end
            end
        end)

        local TweenService = game:GetService("TweenService")
        local humanoid = character:WaitForChild("Humanoid")

        task.delay(25, function()
            stopAimLock()
        end)
    end,
})

andtab:CreateParagraph({
    Title = "Coming Soon",
    Content = "More features coming soon!"
})

BondsTab:CreateParagraph({
    Title = "Coming Soon",
    Content = "More features coming soon!"
})

local creditos = Window:CreateTab("Credits", "users")

creditos:CreateParagraph({
    Title = "Script Creation Credits (ringtaa):",
    Content = "The TPs in the 'ringtaa' section, Easter TPs and flight function were created by ringtaa."
})

creditos:CreateParagraph({
    Title = "Script Creation Credits:",
    Content = "Aimbot functions, end game, teleport (my section) and vision were developed by Lucas."
})

creditos:CreateParagraph({
    Title = " ",
    Content = "The main system (except flight function) and train were also made by Lucas."
})
